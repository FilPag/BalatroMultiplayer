{
	"compilerOptions": {
		/* Language and Environment */
		"target": "ESNext" /* Set the JavaScript language version for emitted JavaScript and include compatible library declarations. */,
		"moduleDetection": "auto" /* Control what method is used to detect module-format JS files. */,

		/* Modules */
		"module": "NodeNext" /* Specify what module code is generated. */,
		"moduleResolution": "NodeNext" /* Specify how TypeScript looks up a file from a given module specifier. */,
		"resolveJsonModule": true /* Enable importing .json files. */,

		/* JavaScript Support */
		"allowJs": true /* Allow JavaScript files to be a part of your program. Use the 'checkJS' option to get errors from these files. */,
		"checkJs": true /* Enable error reporting in type-checked JavaScript files. */,
		"maxNodeModuleJsDepth": 1 /* Specify the maximum folder depth used for checking JavaScript files from 'node_modules'. Only applicable with 'allowJs'. */,

		/* Emit */
		"outDir": "./dist" /* Specify an output folder for all emitted files. */,

		/* Interop Constraints */
		"isolatedModules": true /* Ensure that each file can be safely transpiled without relying on other imports. */,
		"allowSyntheticDefaultImports": true /* Allow 'import x from y' when a module doesn't have a default export. */,
		"esModuleInterop": true /* Emit additional JavaScript to ease support for importing CommonJS modules. This enables 'allowSyntheticDefaultImports' for type compatibility. */,
		"forceConsistentCasingInFileNames": true /* Ensure that casing is correct in imports. */,

		/* Type Checking */
		"strict": true /* Enable all strict type-checking options. */,
		"noImplicitAny": true /* Enable error reporting for expressions and declarations with an implied 'any' type. */,
		"strictPropertyInitialization": true /* Check for class properties that are declared but not set in the constructor. */,
		"noImplicitThis": true /* Enable error reporting when 'this' is given the type 'any'. */,
		"useUnknownInCatchVariables": true /* Default catch clause variables as 'unknown' instead of 'any'. */,
		"alwaysStrict": true /* Ensure 'use strict' is always emitted. */,
		"noImplicitReturns": true /* Enable error reporting for codepaths that do not explicitly return in a function. */,

		/* Completeness */
		"skipDefaultLibCheck": true /* Skip type checking .d.ts files that are included with TypeScript. */,
		"skipLibCheck": true /* Skip type checking all .d.ts files. */
	}
}
