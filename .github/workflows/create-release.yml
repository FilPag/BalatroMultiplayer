name: Create Release

on:
  push:
    tags:
      - "*.*.*" # Matches tags like 1.0.0, 2.3.4, etc.

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Extract version from tag
        id: extract_version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "::set-output name=version::$VERSION"

      - name: Prepare release assets
        env:
          CONFIG_URL: ${{ secrets.CONFIG_URL }}
          CONFIG_PORT: ${{ secrets.CONFIG_PORT }}
        run: |
          mkdir -p release/Multiplayer
          cp -r Multiplayer/* release/Multiplayer/
          rm release/Multiplayer/example.Config.lua

          # Create the config.lua file
          echo "----------------------------------------------" > release/Multiplayer/config.lua
          echo "------------MOD CONFIG------------------------" >> release/Multiplayer/config.lua
          echo "" >> release/Multiplayer/config.lua
          echo "Config = {}" >> release/Multiplayer/config.lua
          echo "" >> release/Multiplayer/config.lua
          echo "Config.URL = '${CONFIG_URL}'" >> release/Multiplayer/config.lua
          echo "Config.PORT = ${CONFIG_PORT}" >> release/Multiplayer/config.lua
          echo "" >> release/Multiplayer/config.lua
          echo "return Config" >> release/Multiplayer/config.lua
          echo "" >> release/Multiplayer/config.lua
          echo "----------------------------------------------" >> release/Multiplayer/config.lua
          echo "------------MOD CONFIG END--------------------" >> release/Multiplayer/config.lua

          # Create the Version.lua file with the version number
          VERSION=${{ steps.extract_version.outputs.version }}
          echo "return \"$VERSION\"" > release/Multiplayer/Version.lua

          # Zip the Multiplayer directory with the desired name
          cd release
          zip -r Multiplayer-beta-$VERSION.zip Multiplayer
          cd ..

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.extract_version.outputs.version }}
          release_name: v${{ steps.extract_version.outputs.version }}
          draft: false
          prerelease: false

      - name: Upload release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./release/Multiplayer-beta-${{ steps.extract_version.outputs.version }}.zip
          asset_name: Multiplayer-beta-${{ steps.extract_version.outputs.version }}.zip
          asset_content_type: application/zip
